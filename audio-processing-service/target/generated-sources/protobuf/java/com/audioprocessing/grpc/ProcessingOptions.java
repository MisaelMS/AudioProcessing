// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: audio_service.proto

package com.audioprocessing.grpc;

/**
 * Protobuf type {@code audioprocessing.ProcessingOptions}
 */
public final class ProcessingOptions extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:audioprocessing.ProcessingOptions)
    ProcessingOptionsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ProcessingOptions.newBuilder() to construct.
  private ProcessingOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ProcessingOptions() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ProcessingOptions();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.audioprocessing.grpc.AudioServiceProto.internal_static_audioprocessing_ProcessingOptions_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.audioprocessing.grpc.AudioServiceProto.internal_static_audioprocessing_ProcessingOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.audioprocessing.grpc.ProcessingOptions.class, com.audioprocessing.grpc.ProcessingOptions.Builder.class);
  }

  private int bitField0_;
  public static final int NORMALIZE_FIELD_NUMBER = 1;
  private boolean normalize_ = false;
  /**
   * <code>bool normalize = 1;</code>
   * @return The normalize.
   */
  @java.lang.Override
  public boolean getNormalize() {
    return normalize_;
  }

  public static final int APPLY_EQUALIZER_FIELD_NUMBER = 2;
  private boolean applyEqualizer_ = false;
  /**
   * <code>bool apply_equalizer = 2;</code>
   * @return The applyEqualizer.
   */
  @java.lang.Override
  public boolean getApplyEqualizer() {
    return applyEqualizer_;
  }

  public static final int EQUALIZER_FIELD_NUMBER = 3;
  private com.audioprocessing.grpc.EqualizerSettings equalizer_;
  /**
   * <code>.audioprocessing.EqualizerSettings equalizer = 3;</code>
   * @return Whether the equalizer field is set.
   */
  @java.lang.Override
  public boolean hasEqualizer() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.audioprocessing.EqualizerSettings equalizer = 3;</code>
   * @return The equalizer.
   */
  @java.lang.Override
  public com.audioprocessing.grpc.EqualizerSettings getEqualizer() {
    return equalizer_ == null ? com.audioprocessing.grpc.EqualizerSettings.getDefaultInstance() : equalizer_;
  }
  /**
   * <code>.audioprocessing.EqualizerSettings equalizer = 3;</code>
   */
  @java.lang.Override
  public com.audioprocessing.grpc.EqualizerSettingsOrBuilder getEqualizerOrBuilder() {
    return equalizer_ == null ? com.audioprocessing.grpc.EqualizerSettings.getDefaultInstance() : equalizer_;
  }

  public static final int APPLY_NOISE_REDUCTION_FIELD_NUMBER = 4;
  private boolean applyNoiseReduction_ = false;
  /**
   * <code>bool apply_noise_reduction = 4;</code>
   * @return The applyNoiseReduction.
   */
  @java.lang.Override
  public boolean getApplyNoiseReduction() {
    return applyNoiseReduction_;
  }

  public static final int VOLUME_ADJUSTMENT_FIELD_NUMBER = 5;
  private double volumeAdjustment_ = 0D;
  /**
   * <code>double volume_adjustment = 5;</code>
   * @return The volumeAdjustment.
   */
  @java.lang.Override
  public double getVolumeAdjustment() {
    return volumeAdjustment_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (normalize_ != false) {
      output.writeBool(1, normalize_);
    }
    if (applyEqualizer_ != false) {
      output.writeBool(2, applyEqualizer_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getEqualizer());
    }
    if (applyNoiseReduction_ != false) {
      output.writeBool(4, applyNoiseReduction_);
    }
    if (java.lang.Double.doubleToRawLongBits(volumeAdjustment_) != 0) {
      output.writeDouble(5, volumeAdjustment_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (normalize_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, normalize_);
    }
    if (applyEqualizer_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, applyEqualizer_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getEqualizer());
    }
    if (applyNoiseReduction_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, applyNoiseReduction_);
    }
    if (java.lang.Double.doubleToRawLongBits(volumeAdjustment_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(5, volumeAdjustment_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.audioprocessing.grpc.ProcessingOptions)) {
      return super.equals(obj);
    }
    com.audioprocessing.grpc.ProcessingOptions other = (com.audioprocessing.grpc.ProcessingOptions) obj;

    if (getNormalize()
        != other.getNormalize()) return false;
    if (getApplyEqualizer()
        != other.getApplyEqualizer()) return false;
    if (hasEqualizer() != other.hasEqualizer()) return false;
    if (hasEqualizer()) {
      if (!getEqualizer()
          .equals(other.getEqualizer())) return false;
    }
    if (getApplyNoiseReduction()
        != other.getApplyNoiseReduction()) return false;
    if (java.lang.Double.doubleToLongBits(getVolumeAdjustment())
        != java.lang.Double.doubleToLongBits(
            other.getVolumeAdjustment())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NORMALIZE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNormalize());
    hash = (37 * hash) + APPLY_EQUALIZER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getApplyEqualizer());
    if (hasEqualizer()) {
      hash = (37 * hash) + EQUALIZER_FIELD_NUMBER;
      hash = (53 * hash) + getEqualizer().hashCode();
    }
    hash = (37 * hash) + APPLY_NOISE_REDUCTION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getApplyNoiseReduction());
    hash = (37 * hash) + VOLUME_ADJUSTMENT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getVolumeAdjustment()));
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.audioprocessing.grpc.ProcessingOptions parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.audioprocessing.grpc.ProcessingOptions parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.audioprocessing.grpc.ProcessingOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.audioprocessing.grpc.ProcessingOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.audioprocessing.grpc.ProcessingOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.audioprocessing.grpc.ProcessingOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.audioprocessing.grpc.ProcessingOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.audioprocessing.grpc.ProcessingOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.audioprocessing.grpc.ProcessingOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.audioprocessing.grpc.ProcessingOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.audioprocessing.grpc.ProcessingOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.audioprocessing.grpc.ProcessingOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.audioprocessing.grpc.ProcessingOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code audioprocessing.ProcessingOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:audioprocessing.ProcessingOptions)
      com.audioprocessing.grpc.ProcessingOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.audioprocessing.grpc.AudioServiceProto.internal_static_audioprocessing_ProcessingOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.audioprocessing.grpc.AudioServiceProto.internal_static_audioprocessing_ProcessingOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.audioprocessing.grpc.ProcessingOptions.class, com.audioprocessing.grpc.ProcessingOptions.Builder.class);
    }

    // Construct using com.audioprocessing.grpc.ProcessingOptions.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getEqualizerFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      normalize_ = false;
      applyEqualizer_ = false;
      equalizer_ = null;
      if (equalizerBuilder_ != null) {
        equalizerBuilder_.dispose();
        equalizerBuilder_ = null;
      }
      applyNoiseReduction_ = false;
      volumeAdjustment_ = 0D;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.audioprocessing.grpc.AudioServiceProto.internal_static_audioprocessing_ProcessingOptions_descriptor;
    }

    @java.lang.Override
    public com.audioprocessing.grpc.ProcessingOptions getDefaultInstanceForType() {
      return com.audioprocessing.grpc.ProcessingOptions.getDefaultInstance();
    }

    @java.lang.Override
    public com.audioprocessing.grpc.ProcessingOptions build() {
      com.audioprocessing.grpc.ProcessingOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.audioprocessing.grpc.ProcessingOptions buildPartial() {
      com.audioprocessing.grpc.ProcessingOptions result = new com.audioprocessing.grpc.ProcessingOptions(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.audioprocessing.grpc.ProcessingOptions result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.normalize_ = normalize_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.applyEqualizer_ = applyEqualizer_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.equalizer_ = equalizerBuilder_ == null
            ? equalizer_
            : equalizerBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.applyNoiseReduction_ = applyNoiseReduction_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.volumeAdjustment_ = volumeAdjustment_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.audioprocessing.grpc.ProcessingOptions) {
        return mergeFrom((com.audioprocessing.grpc.ProcessingOptions)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.audioprocessing.grpc.ProcessingOptions other) {
      if (other == com.audioprocessing.grpc.ProcessingOptions.getDefaultInstance()) return this;
      if (other.getNormalize() != false) {
        setNormalize(other.getNormalize());
      }
      if (other.getApplyEqualizer() != false) {
        setApplyEqualizer(other.getApplyEqualizer());
      }
      if (other.hasEqualizer()) {
        mergeEqualizer(other.getEqualizer());
      }
      if (other.getApplyNoiseReduction() != false) {
        setApplyNoiseReduction(other.getApplyNoiseReduction());
      }
      if (other.getVolumeAdjustment() != 0D) {
        setVolumeAdjustment(other.getVolumeAdjustment());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              normalize_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              applyEqualizer_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              input.readMessage(
                  getEqualizerFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              applyNoiseReduction_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 41: {
              volumeAdjustment_ = input.readDouble();
              bitField0_ |= 0x00000010;
              break;
            } // case 41
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean normalize_ ;
    /**
     * <code>bool normalize = 1;</code>
     * @return The normalize.
     */
    @java.lang.Override
    public boolean getNormalize() {
      return normalize_;
    }
    /**
     * <code>bool normalize = 1;</code>
     * @param value The normalize to set.
     * @return This builder for chaining.
     */
    public Builder setNormalize(boolean value) {

      normalize_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>bool normalize = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearNormalize() {
      bitField0_ = (bitField0_ & ~0x00000001);
      normalize_ = false;
      onChanged();
      return this;
    }

    private boolean applyEqualizer_ ;
    /**
     * <code>bool apply_equalizer = 2;</code>
     * @return The applyEqualizer.
     */
    @java.lang.Override
    public boolean getApplyEqualizer() {
      return applyEqualizer_;
    }
    /**
     * <code>bool apply_equalizer = 2;</code>
     * @param value The applyEqualizer to set.
     * @return This builder for chaining.
     */
    public Builder setApplyEqualizer(boolean value) {

      applyEqualizer_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>bool apply_equalizer = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearApplyEqualizer() {
      bitField0_ = (bitField0_ & ~0x00000002);
      applyEqualizer_ = false;
      onChanged();
      return this;
    }

    private com.audioprocessing.grpc.EqualizerSettings equalizer_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.audioprocessing.grpc.EqualizerSettings, com.audioprocessing.grpc.EqualizerSettings.Builder, com.audioprocessing.grpc.EqualizerSettingsOrBuilder> equalizerBuilder_;
    /**
     * <code>.audioprocessing.EqualizerSettings equalizer = 3;</code>
     * @return Whether the equalizer field is set.
     */
    public boolean hasEqualizer() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.audioprocessing.EqualizerSettings equalizer = 3;</code>
     * @return The equalizer.
     */
    public com.audioprocessing.grpc.EqualizerSettings getEqualizer() {
      if (equalizerBuilder_ == null) {
        return equalizer_ == null ? com.audioprocessing.grpc.EqualizerSettings.getDefaultInstance() : equalizer_;
      } else {
        return equalizerBuilder_.getMessage();
      }
    }
    /**
     * <code>.audioprocessing.EqualizerSettings equalizer = 3;</code>
     */
    public Builder setEqualizer(com.audioprocessing.grpc.EqualizerSettings value) {
      if (equalizerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        equalizer_ = value;
      } else {
        equalizerBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.audioprocessing.EqualizerSettings equalizer = 3;</code>
     */
    public Builder setEqualizer(
        com.audioprocessing.grpc.EqualizerSettings.Builder builderForValue) {
      if (equalizerBuilder_ == null) {
        equalizer_ = builderForValue.build();
      } else {
        equalizerBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.audioprocessing.EqualizerSettings equalizer = 3;</code>
     */
    public Builder mergeEqualizer(com.audioprocessing.grpc.EqualizerSettings value) {
      if (equalizerBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          equalizer_ != null &&
          equalizer_ != com.audioprocessing.grpc.EqualizerSettings.getDefaultInstance()) {
          getEqualizerBuilder().mergeFrom(value);
        } else {
          equalizer_ = value;
        }
      } else {
        equalizerBuilder_.mergeFrom(value);
      }
      if (equalizer_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.audioprocessing.EqualizerSettings equalizer = 3;</code>
     */
    public Builder clearEqualizer() {
      bitField0_ = (bitField0_ & ~0x00000004);
      equalizer_ = null;
      if (equalizerBuilder_ != null) {
        equalizerBuilder_.dispose();
        equalizerBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.audioprocessing.EqualizerSettings equalizer = 3;</code>
     */
    public com.audioprocessing.grpc.EqualizerSettings.Builder getEqualizerBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getEqualizerFieldBuilder().getBuilder();
    }
    /**
     * <code>.audioprocessing.EqualizerSettings equalizer = 3;</code>
     */
    public com.audioprocessing.grpc.EqualizerSettingsOrBuilder getEqualizerOrBuilder() {
      if (equalizerBuilder_ != null) {
        return equalizerBuilder_.getMessageOrBuilder();
      } else {
        return equalizer_ == null ?
            com.audioprocessing.grpc.EqualizerSettings.getDefaultInstance() : equalizer_;
      }
    }
    /**
     * <code>.audioprocessing.EqualizerSettings equalizer = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.audioprocessing.grpc.EqualizerSettings, com.audioprocessing.grpc.EqualizerSettings.Builder, com.audioprocessing.grpc.EqualizerSettingsOrBuilder> 
        getEqualizerFieldBuilder() {
      if (equalizerBuilder_ == null) {
        equalizerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.audioprocessing.grpc.EqualizerSettings, com.audioprocessing.grpc.EqualizerSettings.Builder, com.audioprocessing.grpc.EqualizerSettingsOrBuilder>(
                getEqualizer(),
                getParentForChildren(),
                isClean());
        equalizer_ = null;
      }
      return equalizerBuilder_;
    }

    private boolean applyNoiseReduction_ ;
    /**
     * <code>bool apply_noise_reduction = 4;</code>
     * @return The applyNoiseReduction.
     */
    @java.lang.Override
    public boolean getApplyNoiseReduction() {
      return applyNoiseReduction_;
    }
    /**
     * <code>bool apply_noise_reduction = 4;</code>
     * @param value The applyNoiseReduction to set.
     * @return This builder for chaining.
     */
    public Builder setApplyNoiseReduction(boolean value) {

      applyNoiseReduction_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>bool apply_noise_reduction = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearApplyNoiseReduction() {
      bitField0_ = (bitField0_ & ~0x00000008);
      applyNoiseReduction_ = false;
      onChanged();
      return this;
    }

    private double volumeAdjustment_ ;
    /**
     * <code>double volume_adjustment = 5;</code>
     * @return The volumeAdjustment.
     */
    @java.lang.Override
    public double getVolumeAdjustment() {
      return volumeAdjustment_;
    }
    /**
     * <code>double volume_adjustment = 5;</code>
     * @param value The volumeAdjustment to set.
     * @return This builder for chaining.
     */
    public Builder setVolumeAdjustment(double value) {

      volumeAdjustment_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>double volume_adjustment = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearVolumeAdjustment() {
      bitField0_ = (bitField0_ & ~0x00000010);
      volumeAdjustment_ = 0D;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:audioprocessing.ProcessingOptions)
  }

  // @@protoc_insertion_point(class_scope:audioprocessing.ProcessingOptions)
  private static final com.audioprocessing.grpc.ProcessingOptions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.audioprocessing.grpc.ProcessingOptions();
  }

  public static com.audioprocessing.grpc.ProcessingOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ProcessingOptions>
      PARSER = new com.google.protobuf.AbstractParser<ProcessingOptions>() {
    @java.lang.Override
    public ProcessingOptions parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ProcessingOptions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ProcessingOptions> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.audioprocessing.grpc.ProcessingOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

