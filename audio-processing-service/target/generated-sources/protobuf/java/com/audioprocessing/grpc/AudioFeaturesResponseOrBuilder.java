// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: audio_service.proto

package com.audioprocessing.grpc;

public interface AudioFeaturesResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:audioprocessing.AudioFeaturesResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string file_id = 1;</code>
   * @return The fileId.
   */
  java.lang.String getFileId();
  /**
   * <code>string file_id = 1;</code>
   * @return The bytes for fileId.
   */
  com.google.protobuf.ByteString
      getFileIdBytes();

  /**
   * <code>double tempo = 2;</code>
   * @return The tempo.
   */
  double getTempo();

  /**
   * <code>string key = 3;</code>
   * @return The key.
   */
  java.lang.String getKey();
  /**
   * <code>string key = 3;</code>
   * @return The bytes for key.
   */
  com.google.protobuf.ByteString
      getKeyBytes();

  /**
   * <code>double loudness = 4;</code>
   * @return The loudness.
   */
  double getLoudness();

  /**
   * <code>repeated double mfcc_coefficients = 5;</code>
   * @return A list containing the mfccCoefficients.
   */
  java.util.List<java.lang.Double> getMfccCoefficientsList();
  /**
   * <code>repeated double mfcc_coefficients = 5;</code>
   * @return The count of mfccCoefficients.
   */
  int getMfccCoefficientsCount();
  /**
   * <code>repeated double mfcc_coefficients = 5;</code>
   * @param index The index of the element to return.
   * @return The mfccCoefficients at the given index.
   */
  double getMfccCoefficients(int index);

  /**
   * <code>.audioprocessing.SpectralFeatures spectral_features = 6;</code>
   * @return Whether the spectralFeatures field is set.
   */
  boolean hasSpectralFeatures();
  /**
   * <code>.audioprocessing.SpectralFeatures spectral_features = 6;</code>
   * @return The spectralFeatures.
   */
  com.audioprocessing.grpc.SpectralFeatures getSpectralFeatures();
  /**
   * <code>.audioprocessing.SpectralFeatures spectral_features = 6;</code>
   */
  com.audioprocessing.grpc.SpectralFeaturesOrBuilder getSpectralFeaturesOrBuilder();
}
